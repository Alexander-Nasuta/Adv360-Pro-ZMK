/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        macro_a_umlaut: macro_a_umlaut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "MACRO_A_UMLAUT";
        };

        macro_o_umlaut: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "NEW_MACRO";
        };

        MACRO_A_UMLAUT_CAPITAL: MACRO_A_UMLAUT_CAPITAL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(A)>;
            label = "MACRO_A_UMLAUT_CAPITAL";
        };

        macro_u_umlaut: macro_u_umlaut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp U>;
            label = "MACRO_U_UMLAUT";
        };

        MACRO_O_UMLAUT_CAPITAL: MACRO_O_UMLAUT_CAPITAL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(O)>;
            label = "MACRO_O_UMLAUT_CAPITAL";
        };

        MACRO_U_UMLAUT_CAPITAL: MACRO_U_UMLAUT_CAPITAL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(U)>;
            label = "MACRO_U_UMLAUT_CAPITAL";
        };

        tmux_leader: tmux_leader {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B)>;
            label = "TMUX_LEADER";
        };

        tmux_split_horizontal: tmux_split_horizontal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp PERCENT>;
            label = "TMUX_SPLIT_HORIZONTAL";
        };

        tmux_split_vertical: tmux_split_vertical {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp DOUBLE_QUOTES>;
            label = "TMUX_SPLIT_VERTICAL";
        };

        tmux_change_window: tmux_change_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N>;
            label = "TMUX_CHANGE_WINDOW";
        };

        tmux_detach: tmux_detach {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp D>;
            label = "TMUX_DETACH";
        };

        tmux_list_sessions: tmux_list_sessions {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp S>;
            label = "TMUX_LIST_SESSIONS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        eng_us_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2  &kp N3    &kp N4     &kp N5  &to 1                                                                           &mo 5      &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W   &kp E     &kp R      &kp T   &tmux_split_vertical                                                            &mo 5      &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S   &kp D     &kp F      &kp G   &tmux_split_horizontal  &kp LCTRL   &kp LALT          &kp LGUI       &kp RCTRL  &mo 0      &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X   &kp C     &kp V      &kp B                                       &mo 4             &bootloader                          &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LCTRL  &kp GRAVE  &mo 3   &kp LEFT  &kp RIGHT          &kp BSPC                &kp DELETE  &tmux_leader      &kp PAGE_DOWN  &kp ENTER  &kp SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &kp LGUI
            >;
        };

        german_layer {
            bindings = <
&kp CARET  &kp N1     &kp N2  &kp N3    &kp N4     &kp N5  &to 0                                                      &mo 5      &kp N6  &kp N7  &kp N8     &kp N9           &kp N0           &kp MINUS
&kp TAB    &kp Q      &kp W   &kp E     &kp R      &kp T   &none                                                      &none      &kp Z   &kp U   &kp I      &kp O            &kp P            &macro_u_umlaut
&kp ESC    &kp A      &kp S   &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI     &kp RCTRL  &none      &kp H   &kp J   &kp K      &kp L            &macro_o_umlaut  &macro_a_umlaut
&mo 2      &kp Y      &kp X   &kp C     &kp V      &kp B                        &mo 4         &kp PAGE_UP                        &kp N   &kp M   &kp COMMA  &kp PERIOD       &kp MINUS        &mo 2
&kp LCTRL  &kp GRAVE  &mo 3   &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN    &kp ENTER  &kp SPACE          &kp UP  &kp DOWN   &kp DE_U_UMLAUT  &kp RBKT         &kp RGUI
            >;
        };

        german_uppercase {
            bindings = <
&kp DE_DEGREE  &kp EXCL   &kp DQT    &kp DE_SECTION  &kp DLLR   &kp PRCNT  &trans                                      &trans  &kp AMPS   &kp FSLH   &kp LPAR       &kp RPAR   &kp EQUAL                &kp QMARK
&trans         &kp LS(Q)  &kp LS(W)  &kp LS(E)       &kp LS(R)  &kp LS(T)  &trans                                      &trans  &kp LS(Z)  &kp LS(U)  &kp LS(I)      &kp LS(O)  &kp LS(P)                &MACRO_U_UMLAUT_CAPITAL
&trans         &kp LS(A)  &kp LS(S)  &kp LS(D)       &kp LS(F)  &kp LS(G)  &trans  &trans  &trans      &trans  &trans  &trans  &kp LS(H)  &kp LS(J)  &kp LS(K)      &kp LS(L)  &MACRO_O_UMLAUT_CAPITAL  &MACRO_A_UMLAUT_CAPITAL
&trans         &kp LS(Y)  &kp LS(X)  &kp LS(C)       &kp LS(V)  &kp LS(B)                  &trans      &trans                  &kp LS(N)  &kp LS(M)  &kp SEMICOLON  &kp COLON  &kp UNDERSCORE           &trans
&trans         &trans     &trans     &trans          &trans                &trans  &trans  &trans      &trans  &trans  &trans             &trans     &trans         &trans     &trans                   &trans
            >;
        };

        symbols_fn {
            bindings = <
&kp F1  &kp F2       &kp F3  &kp F4          &kp F5           &kp F6  &trans                                             &trans     &kp F7           &kp F8                &kp F9                 &kp F10           &kp F11            &kp F12
&trans  &trans       &trans  &trans          &trans           &trans  &none                                              &none      &kp EXCLAMATION  &kp KP_MINUS          &kp KP_PLUS            &kp KP_MULTIPLY   &kp KP_DIVIDE      &kp GRAVE
&trans  &trans       &trans  &trans          &trans           &trans  &none   &trans      &trans      &trans  &trans     &none      &kp KP_EQUAL     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp AMPERSAND
&trans  &trans       &trans  &kp LC(C)       &kp LC(V)        &trans                      &trans      &trans                        &kp TILDE        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN     &kp GREATER_THAN   &kp HASH
&trans  &kp PERCENT  &trans  &kp LEFT_ARROW  &kp RIGHT_ARROW          &kp N0  &kp DOLLAR  &trans      &trans  &kp ENTER  &kp UNDER                   &kp UP_ARROW          &kp DOWN_ARROW         &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp CARET
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &kp N0  &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                         &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                   &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none            &bt BT_CLR   &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &bootloader      &bootloader                                      &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none            &none        &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
